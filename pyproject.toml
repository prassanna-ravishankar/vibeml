[project]
name = "vibeml"
version = "0.0.1"
description = "vibeml"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}
authors = [
  {name = "Prass, The Nomadic Coder", email = "me@prassanna.io"},
]
classifiers = [
  "Development Status :: 1 - Planning",
]

dependencies = [
    "click >=8.0.1",
    "nox",
    "skypilot[nebius]>=0.8.1",
    "fastmcp>=0.1.0",
    "pydantic>=2.0.0",
    "cryptography>=41.0.0",
]


[project.urls]
Homepage = "https://github.com/prassanna-ravishankar/vibeml"
Repository = "https://github.com/prassanna-ravishankar/vibeml"
Documentation = "https://vibeml.readthedocs.io"
Changelog = "https://github.com/prassanna-ravishankar/vibeml/releases"

[dependency-groups]
dev = [
  "coverage[toml] >= 6.2",
  "pre-commit >=2.16.0",
  "pre-commit-hooks >=4.6.0",
  "pytest >=6.2.5",
  "pygments >=2.10.0",
]
lint = [
  "ruff >=0.5.5",
  "pydoclint >=0.5.0",
]
docs = [
  "furo >=2021.11.12",
  "myst-parser == 3.0.1",
  "sphinx >= 4.3.2",
  "sphinx-autobuild >=2021.3.14",
  "sphinx-click >=3.0.2",
]
mypy = [
  "mypy >=0.930"
]
typeguard = [
  "typeguard >=2.13.3"
]
xdoctest = [
  "xdoctest[colors] >=0.15.10"
]

[tool.setuptools.packages.find]
where = ["src"]

[tool.uv]
package = true

[project.scripts]
vibeml = "vibeml.__main__:cli"

[build-system]
# When using mypyc, you must list all dependencies used by the compiled
# modules here. Otherwise, mypyc will not be able to see the types of the
# dependencies, and the compilation will fail.
requires = [
    "setuptools>=61.0",
    "mypy>=1.0",
]
build-backend = "setuptools.build_meta"

[tool.coverage.paths]
source = ["src", "*/site-packages"]
tests = ["tests", "*/tests"]

[tool.coverage.run]
branch = true
source = ["vibeml", "tests"]

[tool.coverage.report]
show_missing = true
fail_under = 100
exclude_lines = [
  "pragma: no cover",
  "if TYPE_CHECKING:",
]

[tool.mypy]
strict = true
warn_unreachable = true
pretty = true
show_column_numbers = true
show_error_context = true

[tool.ruff]
src = ["src", "tests"]

[tool.ruff.lint]
select = [
  "B",    # flake8-bugbear
  "C90",  # mccabe
  "D",    # pydocstyle
  "E",    # pycodestyle
  "F",    # pyflakes
  "I",    # isort
  "N",    # pep8-naming
  "RUF",  # Ruff-specific rules
  "S",    # flake8-bandit
  "UP",   # pyupgrade
  "W",    # pycodestyle
]
ignore = [
  "COM812",
  "COM819",
  "D107",  # undocumented-public-init conflicts with DOC301
  "D206",
  "D300",
  "E111",
  "E114",
  "E117",
  "ISC001",
  "ISC002",
  "Q000",
  "Q001",
  "Q002",
  "Q003",
  "W191",
]

[tool.ruff.lint.per-file-ignores]
"*/test_*.py" = ["S101"]
"noxfile.py" = ["S101"]
"**/conftest.py" = ["S101"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.pydoclint]
style = 'google'
exclude = '\.git|\.nox|noxfile.py'
arg-type-hints-in-docstring = false
